---
- hosts: Deploy
  vars:
    app_home_dir: "/home/{{app.remote.user}}/sites/{{app.remote.site}}"
  tasks:
  - include_vars: vars.yml

  - name: Install required packages
    become: yes
    package:
      name:
        - unzip
        - python3.8
        - python3-pip
        - nginx
        - gunicorn
      state: latest

  - name: Create directory structure in deploy servers
    file:
      path: "{{app_home_dir}}"
      state: directory

  - name: Install package to deploy servers
    unarchive:
      src: "{{app.package.src}}"
      dest: "{{app_home_dir}}"

  - name: Copy configured settings
    template:
      src: templates/settings.py.j2
      dest: "{{app_home_dir}}/app/settings.py"

  - name: Install required packages
    shell:
      cmd: pip3 install -r requirements.txt
    args:
      chdir: "{{app_home_dir}}"

  - name: Collect static files
    shell:
      cmd: python3.8 manage.py collectstatic --noinput
    args:
      chdir: "{{app_home_dir}}"

  - name: Migrate database
    shell: |
      python3.8 manage.py makemigrations
      python3.8 manage.py makemigrations events
      python3.8 manage.py migrate
    args:
      chdir: "{{app_home_dir}}"

  - name: Create nginx directory structure
    become: yes
    file:
      path: "/etc/nginx/{{item}}/"
      state: directory
    loop:
      - sites-available
      - sites-enabled

  - name: Copy nginx conf
    become: yes
    template:
      src: "templates/nginx.conf.j2"
      dest: "/etc/nginx/sites-available/{{app.remote.site}}"

  - name: Add a symbolic link
    become: yes
    file:
      src: "/etc/nginx/sites-available/{{app.remote.site}}"
      dest: "/etc/nginx/sites-enabled/{{app.remote.site}}"
      state: link

  - name: Add gunicorn service
    become: yes
    template:
      src: "templates/gunicorn-systemd.service.j2"
      dest: "/etc/systemd/system/gunicorn-{{app.remote.site}}.service"

  - name: Reload daemon
    become: yes
    systemd:
      daemon_reload: yes

  - name: Reload nginx
    become: yes
    service:
      name: nginx
      state: reloaded

  - name: Enable gunicorn
    become: yes
    systemd:
      name: "gunicorn-{{app.remote.site}}.service"
      enabled: yes

  - name: Start gunicorn
    become: yes
    systemd:
      name: "gunicorn-{{app.remote.site}}.service"
      state: restarted
